---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: solr
  labels:
    app.kubernetes.io/name: solr
    app.kubernetes.io/version: "8.9.0"
    app.kubernetes.io/component: searchindex
    app.kubernetes.io/part-of: dataverse
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: solr
      app.kubernetes.io/part-of: dataverse
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: solr
        app.kubernetes.io/part-of: dataverse
    spec:
      containers:
        - name: solr
          image: sshoc/solr-k8s:5.9
          imagePullPolicy: Always
          resources:
            requests:
              memory: 2Gi
            limits:
              memory: 4Gi
          ports:
            - name: index
              containerPort: 8983
          volumeMounts:
            - name: data
              mountPath: /var/solr/data/collection1/data
            - name: schema
              mountPath: /var/solr/data/schema
          env:
            - name: SOLR_PORT  # Otherwise, this is wrongfully set by K8s.
              value: "8983"
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            failureThreshold: 4 # thus restart after 4 minutes n/a
            httpGet:
              path: /solr/collection1/admin/ping
              port: index
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            failureThreshold: 2
            httpGet:
              path: /solr/collection1/admin/ping
              port: index
        # - name: schema-sidecar
        - name: reindex-webhook-sidecar
          image: sshoc/solr-k8s:5.9
          imagePullPolicy: Always
          command: ["/var/solr/data/tini", "--", "/var/solr/data/scripts/schema/sidecar.sh"]
          ports:
            - name: webhook
              containerPort: 9000
          volumeMounts:
            - name: schema
              mountPath: /var/solr/data/schema
          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 20
            failureThreshold: 2
            httpGet:
              path: /
              port: webhook
      initContainers:
        - name: volume-mount-hack
          image: giantswarm/tiny-tools
          command: ["sh", "-c", "chown -c 8983:8983 /data"]
          volumeMounts:
            - name: data
              mountPath: /data
        - name: schema-init
          image: sshoc/solr-k8s:5.9
          imagePullPolicy: Always
          command: ["/var/solr/data/scripts/schema/init.sh"]
          volumeMounts:
            - name: schema
              mountPath: /var/solr/data/schema
            - name: api-secret
              mountPath: "/var/solr/data/scripts/schema/api"
              readOnly: true
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: solr
        - name: schema
          emptyDir: {} # No PV needed: EmptyDir is ok, because only the solr main/core image and the sidecar image will need access to it. At pod-regeneration, contents (schema.xml) will be re-generated too.
        - name: api-secret
          secret:
            secretName: dataverse-api
